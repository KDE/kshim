stages:
  - build
  - upload
  - release

include:
  - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/windows.yml
  - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/linux.yml
  - https://invent.kde.org/sysadmin/ci-utilities/raw/master/gitlab-templates/freebsd.yml

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/binaries/$CI_COMMIT_TAG"

suse_tumbleweed_qt515:
  artifacts:
    paths:
      - "_install/bin/*"

# First we upload the assets to the generic package registery
upload:
  stage: upload
  image: kdeorg/ci-suse-qt515:latest
  tags:
    - Linux
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - cd _install/bin
    - sha256sum kshimgen > kshimgen.sha256
  script:
    - |
      curl -v --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file kshimgen "${PACKAGE_REGISTRY_URL}/kshimgen"
    - |
      curl -v --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file kshimgen.sha256 "${PACKAGE_REGISTRY_URL}/kshimgen.sha256"

# now we create a release with links to the assets in the package registery
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - Linux
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Create release"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: $CI_COMMIT_TAG_MESSAGE
    tag_name: $CI_COMMIT_TAG
    assets:
      links:
        - name: Linux Binary
          url: "${PACKAGE_REGISTRY_URL}/kshimgen"
          filepath: /binaries/linux
        - name: SHA256 for Linux Binary 
          url: "${PACKAGE_REGISTRY_URL}/kshimgen.sha256"
          filepath: /binaries/linux-sha256
