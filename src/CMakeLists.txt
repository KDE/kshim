configure_file(config.h.in config.h @ONLY)

add_library(kshimgen STATIC kshimdata.cpp kshim.cpp)
if (WIN32)
    target_sources(kshimgen PRIVATE kshim_win.cpp)
else()
    target_sources(kshimgen PRIVATE kshim_unix.cpp)
endif()
target_include_directories(kshimgen PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>)

if(WIN32)
    target_compile_definitions(kshimgen PUBLIC _CRT_SECURE_NO_WARNINGS WIN32_LEAN_AND_MEAN UNICODE _UNICODE)
endif()

if (KSHIM_HAS_FILESYSTEM)
    if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
        target_link_libraries(kshimgen PUBLIC stdc++fs)
    endif()
else()
    target_sources(kshimgen PRIVATE kshimpath.cpp)
endif()

add_executable(kshimgen_exe WIN32)
if (WIN32)
    target_sources(kshimgen_exe PRIVATE main_win.cpp)
else()
    target_sources(kshimgen_exe PRIVATE main_unix.cpp)
endif()
target_link_libraries(kshimgen_exe kshimgen)

install(TARGETS kshimgen_exe RUNTIME DESTINATION bin)
